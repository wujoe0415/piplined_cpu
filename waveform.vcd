$version Generated by VerilatedVcd $end
$date Mon May 22 16:18:28 2023 $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  1 a! clk $end
  $var wire  1 c! finish $end
  $var wire  1 b! rst $end
  $scope module hw3_tb $end
   $var wire 32 )" DWIDTH [31:0] $end
   $var wire  1 a! clk $end
   $var wire 32 /! cycle_count [31:0] $end
   $var wire 32 +" cycle_for_ans [31:0] $end
   $var wire  1 -! finish $end
   $var wire 32 P! golden_dmem[0] [31:0] $end
   $var wire 32 Z! golden_dmem[10] [31:0] $end
   $var wire 32 [! golden_dmem[11] [31:0] $end
   $var wire 32 \! golden_dmem[12] [31:0] $end
   $var wire 32 ]! golden_dmem[13] [31:0] $end
   $var wire 32 ^! golden_dmem[14] [31:0] $end
   $var wire 32 _! golden_dmem[15] [31:0] $end
   $var wire 32 Q! golden_dmem[1] [31:0] $end
   $var wire 32 R! golden_dmem[2] [31:0] $end
   $var wire 32 S! golden_dmem[3] [31:0] $end
   $var wire 32 T! golden_dmem[4] [31:0] $end
   $var wire 32 U! golden_dmem[5] [31:0] $end
   $var wire 32 V! golden_dmem[6] [31:0] $end
   $var wire 32 W! golden_dmem[7] [31:0] $end
   $var wire 32 X! golden_dmem[8] [31:0] $end
   $var wire 32 Y! golden_dmem[9] [31:0] $end
   $var wire 32 0! golden_reg[0] [31:0] $end
   $var wire 32 :! golden_reg[10] [31:0] $end
   $var wire 32 ;! golden_reg[11] [31:0] $end
   $var wire 32 <! golden_reg[12] [31:0] $end
   $var wire 32 =! golden_reg[13] [31:0] $end
   $var wire 32 >! golden_reg[14] [31:0] $end
   $var wire 32 ?! golden_reg[15] [31:0] $end
   $var wire 32 @! golden_reg[16] [31:0] $end
   $var wire 32 A! golden_reg[17] [31:0] $end
   $var wire 32 B! golden_reg[18] [31:0] $end
   $var wire 32 C! golden_reg[19] [31:0] $end
   $var wire 32 1! golden_reg[1] [31:0] $end
   $var wire 32 D! golden_reg[20] [31:0] $end
   $var wire 32 E! golden_reg[21] [31:0] $end
   $var wire 32 F! golden_reg[22] [31:0] $end
   $var wire 32 G! golden_reg[23] [31:0] $end
   $var wire 32 H! golden_reg[24] [31:0] $end
   $var wire 32 I! golden_reg[25] [31:0] $end
   $var wire 32 J! golden_reg[26] [31:0] $end
   $var wire 32 K! golden_reg[27] [31:0] $end
   $var wire 32 L! golden_reg[28] [31:0] $end
   $var wire 32 M! golden_reg[29] [31:0] $end
   $var wire 32 2! golden_reg[2] [31:0] $end
   $var wire 32 N! golden_reg[30] [31:0] $end
   $var wire 32 O! golden_reg[31] [31:0] $end
   $var wire 32 3! golden_reg[3] [31:0] $end
   $var wire 32 4! golden_reg[4] [31:0] $end
   $var wire 32 5! golden_reg[5] [31:0] $end
   $var wire 32 6! golden_reg[6] [31:0] $end
   $var wire 32 7! golden_reg[7] [31:0] $end
   $var wire 32 8! golden_reg[8] [31:0] $end
   $var wire 32 9! golden_reg[9] [31:0] $end
   $var wire 32 .! i [31:0] $end
   $var wire  1 b! rst $end
   $var wire  1 `! start $end
   $var wire 32 *" tmp [31:0] $end
   $scope module core_top_inst $end
    $var wire 32 )" DWIDTH [31:0] $end
    $var wire  3 -" J_TYPE_BEQ [2:0] $end
    $var wire  3 0" J_TYPE_J [2:0] $end
    $var wire  3 ." J_TYPE_JAL [2:0] $end
    $var wire  3 /" J_TYPE_JR [2:0] $end
    $var wire  3 ," J_TYPE_NOP [2:0] $end
    $var wire 32 8 alu_out [31:0] $end
    $var wire 32 6 alu_rs1 [31:0] $end
    $var wire 32 7 alu_rs2 [31:0] $end
    $var wire  1 2 branch $end
    $var wire  1 a! clk $end
    $var wire 32 e! dmem_out [31:0] $end
    $var wire 32 ? ex_imm [31:0] $end
    $var wire 32 = ex_jump_addr [31:0] $end
    $var wire  4 G ex_jump_type [3:0] $end
    $var wire  4 > ex_op [3:0] $end
    $var wire 32 < ex_pc [31:0] $end
    $var wire 32 @ ex_ra [31:0] $end
    $var wire  5 B ex_rdst_id [4:0] $end
    $var wire 32 6 ex_rs1 [31:0] $end
    $var wire 32 A ex_rs2 [31:0] $end
    $var wire  1 F ex_ssel $end
    $var wire  2 E ex_wbsel [1:0] $end
    $var wire  1 D ex_we_dmem $end
    $var wire  1 C ex_we_reg $end
    $var wire  1 1" exmem_flush $end
    $var wire  1 U idex_flush $end
    $var wire  1 T ifid_flush $end
    $var wire  1 R ifid_write $end
    $var wire 32 . imm [31:0] $end
    $var wire 32 & instr [31:0] $end
    $var wire 26 - jump_addr [25:0] $end
    $var wire  3 , jump_type [2:0] $end
    $var wire 32 H mem_pc [31:0] $end
    $var wire 32 I mem_rd [31:0] $end
    $var wire  5 K mem_rdst_id [4:0] $end
    $var wire  1 3 mem_read $end
    $var wire 32 J mem_rs2 [31:0] $end
    $var wire  2 N mem_wbsel [1:0] $end
    $var wire  1 M mem_we_dmem $end
    $var wire  1 L mem_we_reg $end
    $var wire  4 ' op [3:0] $end
    $var wire 32 ; out [31:0] $end
    $var wire  1 : overflow $end
    $var wire 32 $ pc [31:0] $end
    $var wire 32 % pc_increment [31:0] $end
    $var wire  1 S pc_write $end
    $var wire 32 d! rd [31:0] $end
    $var wire 32 f! rdata [31:0] $end
    $var wire  5 1 rdst_id [4:0] $end
    $var wire  5 / rs1_id [4:0] $end
    $var wire 32 4 rs1_out [31:0] $end
    $var wire  5 0 rs2_id [4:0] $end
    $var wire 32 5 rs2_out [31:0] $end
    $var wire  1 b! rst $end
    $var wire  1 ( ssel $end
    $var wire 32 O wb_rdata [31:0] $end
    $var wire  5 P wb_rdst_id [4:0] $end
    $var wire  1 Q wb_we_reg $end
    $var wire  2 ) wbsel [1:0] $end
    $var wire  1 + we_dmem $end
    $var wire  1 * we_regfile $end
    $var wire  1 9 zero $end
    $scope module alu_inst $end
     $var wire 32 )" DWIDTH [31:0] $end
     $var wire  4 4" OP_ADD [3:0] $end
     $var wire  4 2" OP_AND [3:0] $end
     $var wire  4 ;" OP_LUI [3:0] $end
     $var wire  4 6" OP_NOR [3:0] $end
     $var wire  4 3" OP_OR [3:0] $end
     $var wire  4 8" OP_SLL [3:0] $end
     $var wire  4 7" OP_SLT [3:0] $end
     $var wire  4 :" OP_SRA [3:0] $end
     $var wire  4 9" OP_SRL [3:0] $end
     $var wire  4 5" OP_SUB [3:0] $end
     $var wire  4 > op [3:0] $end
     $var wire  1 : overflow $end
     $var wire 32 8 rd [31:0] $end
     $var wire 33 V result [32:0] $end
     $var wire 32 6 rs1 [31:0] $end
     $var wire 32 7 rs2 [31:0] $end
     $var wire  1 9 zero $end
    $upscope $end
    $scope module decode_inst $end
     $var wire  4 4" ALU_OP_ADD [3:0] $end
     $var wire  4 2" ALU_OP_AND [3:0] $end
     $var wire  4 J" ALU_OP_NOP [3:0] $end
     $var wire  4 6" ALU_OP_NOR [3:0] $end
     $var wire  4 3" ALU_OP_OR [3:0] $end
     $var wire  4 7" ALU_OP_SLT [3:0] $end
     $var wire  4 5" ALU_OP_SUB [3:0] $end
     $var wire 32 )" DWIDTH [31:0] $end
     $var wire  6 D" FUNCT_ADD [5:0] $end
     $var wire  6 F" FUNCT_AND [5:0] $end
     $var wire  6 =" FUNCT_JR [5:0] $end
     $var wire  6 H" FUNCT_NOR [5:0] $end
     $var wire  6 G" FUNCT_OR [5:0] $end
     $var wire  6 I" FUNCT_SLT [5:0] $end
     $var wire  6 E" FUNCT_SUB [5:0] $end
     $var wire  3 -" J_TYPE_BEQ [2:0] $end
     $var wire  3 0" J_TYPE_J [2:0] $end
     $var wire  3 ." J_TYPE_JAL [2:0] $end
     $var wire  3 /" J_TYPE_JR [2:0] $end
     $var wire  3 ," J_TYPE_NOP [2:0] $end
     $var wire  6 =" OP_ADDI [5:0] $end
     $var wire  6 A" OP_BEQ [5:0] $end
     $var wire  6 C" OP_J [5:0] $end
     $var wire  6 B" OP_JAL [5:0] $end
     $var wire  6 ?" OP_LW [5:0] $end
     $var wire  6 <" OP_R_TYPE [5:0] $end
     $var wire  6 >" OP_SLTI [5:0] $end
     $var wire  6 @" OP_SW [5:0] $end
     $var wire 26 - address [25:0] $end
     $var wire  6 [ funct [5:0] $end
     $var wire 32 . imm [31:0] $end
     $var wire 16 \ immediate [15:0] $end
     $var wire 32 & instr [31:0] $end
     $var wire  1 ^ is_addi $end
     $var wire  1 a is_beq $end
     $var wire  1 2 is_branch $end
     $var wire  1 c is_j $end
     $var wire  1 b is_jal $end
     $var wire  1 ` is_lw $end
     $var wire  1 ] is_r_type $end
     $var wire  1 _ is_slti $end
     $var wire  1 + is_sw $end
     $var wire 26 - jump_addr [25:0] $end
     $var wire  3 , jump_type [2:0] $end
     $var wire  1 3 mem_read $end
     $var wire  4 ' op [3:0] $end
     $var wire  6 X opcode [5:0] $end
     $var wire  5 Y rd [4:0] $end
     $var wire  5 1 rdst_id [4:0] $end
     $var wire  5 / rs [4:0] $end
     $var wire  5 / rs1_id [4:0] $end
     $var wire  5 0 rs2_id [4:0] $end
     $var wire  5 0 rt [4:0] $end
     $var wire  5 Z shamt [4:0] $end
     $var wire  1 ( ssel $end
     $var wire  2 ) wbsel [1:0] $end
     $var wire  1 + we_dmem $end
     $var wire  1 * we_regfile $end
    $upscope $end
    $scope module dmem_inst $end
     $var wire 32 g! RAM[0] [31:0] $end
     $var wire 32 q! RAM[10] [31:0] $end
     $var wire 32 r! RAM[11] [31:0] $end
     $var wire 32 s! RAM[12] [31:0] $end
     $var wire 32 t! RAM[13] [31:0] $end
     $var wire 32 u! RAM[14] [31:0] $end
     $var wire 32 v! RAM[15] [31:0] $end
     $var wire 32 h! RAM[1] [31:0] $end
     $var wire 32 i! RAM[2] [31:0] $end
     $var wire 32 j! RAM[3] [31:0] $end
     $var wire 32 k! RAM[4] [31:0] $end
     $var wire 32 l! RAM[5] [31:0] $end
     $var wire 32 m! RAM[6] [31:0] $end
     $var wire 32 n! RAM[7] [31:0] $end
     $var wire 32 o! RAM[8] [31:0] $end
     $var wire 32 p! RAM[9] [31:0] $end
     $var wire  6 +! addr [5:0] $end
     $var wire  1 a! clk $end
     $var wire 32 # idx [31:0] $end
     $var wire 32 e! rdata [31:0] $end
     $var wire 32 J wdata [31:0] $end
     $var wire  1 M we $end
    $upscope $end
    $scope module exmem_inst $end
     $var wire  1 a! clk $end
     $var wire 32 < ex_pc [31:0] $end
     $var wire  5 B ex_rdst_id [4:0] $end
     $var wire  2 E ex_wbsel [1:0] $end
     $var wire  1 D ex_we_dmem $end
     $var wire  1 C ex_we_reg $end
     $var wire  1 1" flush $end
     $var wire 32 H mem_pc [31:0] $end
     $var wire 32 I mem_rd [31:0] $end
     $var wire  5 K mem_rdst_id [4:0] $end
     $var wire 32 J mem_rs2 [31:0] $end
     $var wire  2 N mem_wbsel [1:0] $end
     $var wire  1 M mem_we_dmem $end
     $var wire  1 L mem_we_reg $end
     $var wire 32 8 rd [31:0] $end
     $var wire 32 A rs2 [31:0] $end
     $var wire  1 b! rst $end
    $upscope $end
    $scope module hazard_ctrl_inst $end
     $var wire  1 2 branch $end
     $var wire  1 a! clk $end
     $var wire  1 e data_stall_counter $end
     $var wire  2 E ex_wbsel [1:0] $end
     $var wire  1 C ex_we_reg $end
     $var wire  1 1" exmem_flush $end
     $var wire  5 K exmem_regt [4:0] $end
     $var wire  2 d hazard_type [1:0] $end
     $var wire  1 U idex_flush $end
     $var wire  5 B idex_regt [4:0] $end
     $var wire  1 T ifid_flush $end
     $var wire  1 R ifid_write $end
     $var wire  1 3 mem_read $end
     $var wire  2 N mem_wbsel [1:0] $end
     $var wire  1 L mem_we_reg $end
     $var wire  1 S pc_write $end
     $var wire  5 / rs1_id [4:0] $end
     $var wire  5 0 rs2_id [4:0] $end
     $var wire  1 b! rst $end
     $var wire  1 9 zero $end
    $upscope $end
    $scope module idex_instr $end
     $var wire 32 ? EX_imm [31:0] $end
     $var wire 26 f EX_jump_addr [25:0] $end
     $var wire  3 g EX_jump_type [2:0] $end
     $var wire  4 > EX_op [3:0] $end
     $var wire 32 < EX_pc [31:0] $end
     $var wire 32 @ EX_ra [31:0] $end
     $var wire  5 B EX_rdst_id [4:0] $end
     $var wire 32 6 EX_rs1 [31:0] $end
     $var wire 32 A EX_rs2 [31:0] $end
     $var wire  1 F EX_ssel $end
     $var wire  2 E EX_wbsel [1:0] $end
     $var wire  1 D EX_we_dmem $end
     $var wire  1 C EX_we_reg $end
     $var wire 32 . ID_imm [31:0] $end
     $var wire 26 - ID_jump_addr [25:0] $end
     $var wire  3 , ID_jump_type [2:0] $end
     $var wire  4 ' ID_op [3:0] $end
     $var wire 32 ; ID_pc [31:0] $end
     $var wire  5 1 ID_rdst_id [4:0] $end
     $var wire 32 4 ID_rs1 [31:0] $end
     $var wire 32 5 ID_rs2 [31:0] $end
     $var wire  1 ( ID_ssel $end
     $var wire  2 ) ID_wbsel [1:0] $end
     $var wire  1 + ID_we_dmem $end
     $var wire  1 * ID_we_reg $end
     $var wire  1 a! clk $end
     $var wire  1 U flush $end
     $var wire  1 b! rst $end
    $upscope $end
    $scope module ifid_inst $end
     $var wire  1 a! clk $end
     $var wire  1 T flush $end
     $var wire  1 R ifid_write $end
     $var wire 32 & instr [31:0] $end
     $var wire 32 $ pc [31:0] $end
     $var wire 32 ; pc_out [31:0] $end
     $var wire 32 f! rdata [31:0] $end
     $var wire  1 b! rst $end
    $upscope $end
    $scope module imem_inst $end
     $var wire 32 w! RAM[0] [31:0] $end
     $var wire 32 #" RAM[10] [31:0] $end
     $var wire 32 $" RAM[11] [31:0] $end
     $var wire 32 %" RAM[12] [31:0] $end
     $var wire 32 &" RAM[13] [31:0] $end
     $var wire 32 '" RAM[14] [31:0] $end
     $var wire 32 (" RAM[15] [31:0] $end
     $var wire 32 x! RAM[1] [31:0] $end
     $var wire 32 y! RAM[2] [31:0] $end
     $var wire 32 z! RAM[3] [31:0] $end
     $var wire 32 {! RAM[4] [31:0] $end
     $var wire 32 |! RAM[5] [31:0] $end
     $var wire 32 }! RAM[6] [31:0] $end
     $var wire 32 ~! RAM[7] [31:0] $end
     $var wire 32 !" RAM[8] [31:0] $end
     $var wire 32 "" RAM[9] [31:0] $end
     $var wire  6 ,! addr [5:0] $end
     $var wire 32 f! rdata [31:0] $end
    $upscope $end
    $scope module memwb_inst $end
     $var wire  1 a! clk $end
     $var wire 32 d! mem_rdata [31:0] $end
     $var wire  5 K mem_rdst_id [4:0] $end
     $var wire  1 M mem_we_dmem $end
     $var wire  1 L mem_we_reg $end
     $var wire  1 b! rst $end
     $var wire 32 O wb_rdata [31:0] $end
     $var wire  5 P wb_rdst_id [4:0] $end
     $var wire  1 Q wb_we_reg $end
    $upscope $end
    $scope module reg_file_inst $end
     $var wire 32 )" DWIDTH [31:0] $end
     $var wire 32 h R[0] [31:0] $end
     $var wire 32 r R[10] [31:0] $end
     $var wire 32 s R[11] [31:0] $end
     $var wire 32 t R[12] [31:0] $end
     $var wire 32 u R[13] [31:0] $end
     $var wire 32 v R[14] [31:0] $end
     $var wire 32 w R[15] [31:0] $end
     $var wire 32 x R[16] [31:0] $end
     $var wire 32 y R[17] [31:0] $end
     $var wire 32 z R[18] [31:0] $end
     $var wire 32 { R[19] [31:0] $end
     $var wire 32 i R[1] [31:0] $end
     $var wire 32 | R[20] [31:0] $end
     $var wire 32 } R[21] [31:0] $end
     $var wire 32 ~ R[22] [31:0] $end
     $var wire 32 !! R[23] [31:0] $end
     $var wire 32 "! R[24] [31:0] $end
     $var wire 32 #! R[25] [31:0] $end
     $var wire 32 $! R[26] [31:0] $end
     $var wire 32 %! R[27] [31:0] $end
     $var wire 32 &! R[28] [31:0] $end
     $var wire 32 '! R[29] [31:0] $end
     $var wire 32 j R[2] [31:0] $end
     $var wire 32 (! R[30] [31:0] $end
     $var wire 32 )! R[31] [31:0] $end
     $var wire 32 k R[3] [31:0] $end
     $var wire 32 l R[4] [31:0] $end
     $var wire 32 m R[5] [31:0] $end
     $var wire 32 n R[6] [31:0] $end
     $var wire 32 o R[7] [31:0] $end
     $var wire 32 p R[8] [31:0] $end
     $var wire 32 q R[9] [31:0] $end
     $var wire  1 a! clk $end
     $var wire 32 *! i [31:0] $end
     $var wire 32 O rdst [31:0] $end
     $var wire  5 P rdst_id [4:0] $end
     $var wire 32 4 rs1 [31:0] $end
     $var wire  5 / rs1_id [4:0] $end
     $var wire 32 5 rs2 [31:0] $end
     $var wire  5 0 rs2_id [4:0] $end
     $var wire  1 b! rst $end
     $var wire  1 Q we $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000010000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000100 %
b00000000000000000000000000000000 &
b1111 '
1(
b00 )
1*
0+
b000 ,
b00000000000000000000000000 -
b00000000000000000000000000000000 .
b00000 /
b00000 0
b00000 1
02
13
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
19
0:
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b0000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000 B
0C
0D
b00 E
0F
b0000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000 K
0L
0M
b00 N
b00000000000000000000000000000000 O
b00000 P
0Q
1R
1S
0T
0U
b000000000000000000000000000000000 V
b000000 X
b00000 Y
b00000 Z
b000000 [
b0000000000000000 \
1]
0^
0_
0`
0a
0b
0c
b00 d
0e
b00000000000000000000000000 f
b000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b000000 +!
b000000 ,!
0-!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b00000000000000000000000000000000 F!
b00000000000000000000000000000000 G!
b00000000000000000000000000000000 H!
b00000000000000000000000000000000 I!
b00000000000000000000000000000000 J!
b00000000000000000000000000000000 K!
b00000000000000000000000000000000 L!
b00000000000000000000000000000000 M!
b00000000000000000000000000000000 N!
b00000000000000000000000000000000 O!
b00000000000000000000000000000000 P!
b00000000000000000000000000000000 Q!
b00000000000000000000000000000000 R!
b00000000000000000000000000000000 S!
b00000000000000000000000000000000 T!
b00000000000000000000000000000000 U!
b00000000000000000000000000000000 V!
b00000000000000000000000000000000 W!
b00000000000000000000000000000000 X!
b00000000000000000000000000000000 Y!
b00000000000000000000000000000000 Z!
b00000000000000000000000000000000 [!
b00000000000000000000000000000000 \!
b00000000000000000000000000000000 ]!
b00000000000000000000000000000000 ^!
b00000000000000000000000000000000 _!
1`!
0a!
1b!
0c!
b00000000000000000000000000000000 d!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 f!
b00000000000000000000000000000000 g!
b00000000000000000000000000000000 h!
b00000000000000000000000000000000 i!
b00000000000000000000000000000000 j!
b00000000000000000000000000000000 k!
b00000000000000000000000000000000 l!
b00000000000000000000000000000000 m!
b00000000000000000000000000000000 n!
b00000000000000000000000000000000 o!
b00000000000000000000000000000000 p!
b00000000000000000000000000000000 q!
b00000000000000000000000000000000 r!
b00000000000000000000000000000000 s!
b00000000000000000000000000000000 t!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 v!
b00000000000000000000000000000000 w!
b00000000000000000000000000000000 x!
b00000000000000000000000000000000 y!
b00000000000000000000000000000000 z!
b00000000000000000000000000000000 {!
b00000000000000000000000000000000 |!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 ~!
b00000000000000000000000000000000 !"
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
b00000000000000000000000000000000 %"
b00000000000000000000000000000000 &"
b00000000000000000000000000000000 '"
b00000000000000000000000000000000 ("
b00000000000000000000000000100000 )"
b00000000000000000000000000000000 *"
b00000000000000000000000000110010 +"
b000 ,"
b001 -"
b010 ."
b011 /"
b100 0"
01"
b0000 2"
b0001 3"
b0010 4"
b0110 5"
b1100 6"
b0111 7"
b1001 8"
b1010 9"
b1101 :"
b1110 ;"
b000000 <"
b001000 ="
b001010 >"
b100011 ?"
b101011 @"
b000100 A"
b000011 B"
b000010 C"
b100000 D"
b100010 E"
b100100 F"
b100101 G"
b100111 H"
b101010 I"
b1111 J"
#1
b00000000000000000000000000100000 *!
1a!
#2
0`!
0a!
#3
1a!
#4
b00000000000000000000000000000001 /!
0a!
#5
b00000000000000000000000000000100 $
b00000000000000000000000000001000 %
b1111 >
b00000000000000000000000000000100 @
1C
1F
b000100 ,!
1a!
0b!
#6
b00000000000000000000000000000010 /!
0a!
#7
b00000000000000000000000000001000 $
b00000000000000000000000000001100 %
b00000000000000000000000000000100 ;
1L
b001000 ,!
1a!
#8
b00000000000000000000000000000011 /!
0a!
#9
b00000000000000000000000000001100 $
b00000000000000000000000000010000 %
b00000000000000000000000000001000 ;
b00000000000000000000000000000100 <
b00000000000000000000000000001000 @
1Q
b001100 ,!
1a!
#10
b00000000000000000000000000000100 /!
0a!
#11
b00000000000000000000000000010000 $
b00000000000000000000000000010100 %
b00000000000000000000000000001100 ;
b00000000000000000000000000001000 <
b00000000000000000000000000001100 @
b00000000000000000000000000000100 H
b010000 ,!
1a!
#12
b00000000000000000000000000000101 /!
0a!
#13
b00000000000000000000000000010100 $
b00000000000000000000000000011000 %
b00000000000000000000000000010000 ;
b00000000000000000000000000001100 <
b00000000000000000000000000010000 @
b00000000000000000000000000001000 H
b010100 ,!
1a!
#14
b00000000000000000000000000000110 /!
0a!
#15
b00000000000000000000000000011000 $
b00000000000000000000000000011100 %
b00000000000000000000000000010100 ;
b00000000000000000000000000010000 <
b00000000000000000000000000010100 @
b00000000000000000000000000001100 H
b011000 ,!
1a!
#16
b00000000000000000000000000000111 /!
0a!
#17
b00000000000000000000000000011100 $
b00000000000000000000000000100000 %
b00000000000000000000000000011000 ;
b00000000000000000000000000010100 <
b00000000000000000000000000011000 @
b00000000000000000000000000010000 H
b011100 ,!
1a!
#18
b00000000000000000000000000001000 /!
0a!
#19
b00000000000000000000000000100000 $
b00000000000000000000000000100100 %
b00000000000000000000000000011100 ;
b00000000000000000000000000011000 <
b00000000000000000000000000011100 @
b00000000000000000000000000010100 H
b100000 ,!
1a!
#20
b00000000000000000000000000001001 /!
0a!
#21
b00000000000000000000000000100100 $
b00000000000000000000000000101000 %
b00000000000000000000000000100000 ;
b00000000000000000000000000011100 <
b00000000000000000000000000100000 @
b00000000000000000000000000011000 H
b100100 ,!
1a!
#22
b00000000000000000000000000001010 /!
0a!
#23
b00000000000000000000000000101000 $
b00000000000000000000000000101100 %
b00000000000000000000000000100100 ;
b00000000000000000000000000100000 <
b00000000000000000000000000100100 @
b00000000000000000000000000011100 H
b101000 ,!
1a!
#24
b00000000000000000000000000001011 /!
0a!
#25
b00000000000000000000000000101100 $
b00000000000000000000000000110000 %
b00000000000000000000000000101000 ;
b00000000000000000000000000100100 <
b00000000000000000000000000101000 @
b00000000000000000000000000100000 H
b101100 ,!
1a!
#26
b00000000000000000000000000001100 /!
0a!
#27
b00000000000000000000000000110000 $
b00000000000000000000000000110100 %
b00000000000000000000000000101100 ;
b00000000000000000000000000101000 <
b00000000000000000000000000101100 @
b00000000000000000000000000100100 H
b110000 ,!
1a!
#28
b00000000000000000000000000001101 /!
0a!
#29
b00000000000000000000000000110100 $
b00000000000000000000000000111000 %
b00000000000000000000000000110000 ;
b00000000000000000000000000101100 <
b00000000000000000000000000110000 @
b00000000000000000000000000101000 H
b110100 ,!
1a!
#30
b00000000000000000000000000001110 /!
0a!
#31
b00000000000000000000000000111000 $
b00000000000000000000000000111100 %
b00000000000000000000000000110100 ;
b00000000000000000000000000110000 <
b00000000000000000000000000110100 @
b00000000000000000000000000101100 H
b111000 ,!
1a!
#32
b00000000000000000000000000001111 /!
0a!
#33
b00000000000000000000000000111100 $
b00000000000000000000000001000000 %
b00000000000000000000000000111000 ;
b00000000000000000000000000110100 <
b00000000000000000000000000111000 @
b00000000000000000000000000110000 H
b111100 ,!
1a!
#34
b00000000000000000000000000010000 /!
0a!
#35
b00000000000000000000000001000000 $
b00000000000000000000000001000100 %
b00000000000000000000000000111100 ;
b00000000000000000000000000111000 <
b00000000000000000000000000111100 @
b00000000000000000000000000110100 H
b000000 ,!
1a!
#36
b00000000000000000000000000010001 /!
0a!
#37
b00000000000000000000000001000100 $
b00000000000000000000000001001000 %
b00000000000000000000000001000000 ;
b00000000000000000000000000111100 <
b00000000000000000000000001000000 @
b00000000000000000000000000111000 H
b000100 ,!
1a!
#38
b00000000000000000000000000010010 /!
0a!
#39
b00000000000000000000000001001000 $
b00000000000000000000000001001100 %
b00000000000000000000000001000100 ;
b00000000000000000000000001000000 <
b00000000000000000000000001000100 @
b00000000000000000000000000111100 H
b001000 ,!
1a!
#40
b00000000000000000000000000010011 /!
0a!
#41
b00000000000000000000000001001100 $
b00000000000000000000000001010000 %
b00000000000000000000000001001000 ;
b00000000000000000000000001000100 <
b00000000000000000000000001001000 @
b00000000000000000000000001000000 H
b001100 ,!
1a!
#42
b00000000000000000000000000010100 /!
0a!
#43
b00000000000000000000000001010000 $
b00000000000000000000000001010100 %
b00000000000000000000000001001100 ;
b00000000000000000000000001001000 <
b00000000000000000000000001001100 @
b00000000000000000000000001000100 H
b010000 ,!
1a!
#44
b00000000000000000000000000010101 /!
0a!
#45
b00000000000000000000000001010100 $
b00000000000000000000000001011000 %
b00000000000000000000000001010000 ;
b00000000000000000000000001001100 <
b00000000000000000000000001010000 @
b00000000000000000000000001001000 H
b010100 ,!
1a!
#46
b00000000000000000000000000010110 /!
0a!
#47
b00000000000000000000000001011000 $
b00000000000000000000000001011100 %
b00000000000000000000000001010100 ;
b00000000000000000000000001010000 <
b00000000000000000000000001010100 @
b00000000000000000000000001001100 H
b011000 ,!
1a!
#48
b00000000000000000000000000010111 /!
0a!
#49
b00000000000000000000000001011100 $
b00000000000000000000000001100000 %
b00000000000000000000000001011000 ;
b00000000000000000000000001010100 <
b00000000000000000000000001011000 @
b00000000000000000000000001010000 H
b011100 ,!
1a!
#50
b00000000000000000000000000011000 /!
0a!
#51
b00000000000000000000000001100000 $
b00000000000000000000000001100100 %
b00000000000000000000000001011100 ;
b00000000000000000000000001011000 <
b00000000000000000000000001011100 @
b00000000000000000000000001010100 H
b100000 ,!
1a!
#52
b00000000000000000000000000011001 /!
0a!
#53
b00000000000000000000000001100100 $
b00000000000000000000000001101000 %
b00000000000000000000000001100000 ;
b00000000000000000000000001011100 <
b00000000000000000000000001100000 @
b00000000000000000000000001011000 H
b100100 ,!
1a!
#54
b00000000000000000000000000011010 /!
0a!
#55
b00000000000000000000000001101000 $
b00000000000000000000000001101100 %
b00000000000000000000000001100100 ;
b00000000000000000000000001100000 <
b00000000000000000000000001100100 @
b00000000000000000000000001011100 H
b101000 ,!
1a!
#56
b00000000000000000000000000011011 /!
0a!
#57
b00000000000000000000000001101100 $
b00000000000000000000000001110000 %
b00000000000000000000000001101000 ;
b00000000000000000000000001100100 <
b00000000000000000000000001101000 @
b00000000000000000000000001100000 H
b101100 ,!
1a!
#58
b00000000000000000000000000011100 /!
0a!
#59
b00000000000000000000000001110000 $
b00000000000000000000000001110100 %
b00000000000000000000000001101100 ;
b00000000000000000000000001101000 <
b00000000000000000000000001101100 @
b00000000000000000000000001100100 H
b110000 ,!
1a!
#60
b00000000000000000000000000011101 /!
0a!
#61
b00000000000000000000000001110100 $
b00000000000000000000000001111000 %
b00000000000000000000000001110000 ;
b00000000000000000000000001101100 <
b00000000000000000000000001110000 @
b00000000000000000000000001101000 H
b110100 ,!
1a!
#62
b00000000000000000000000000011110 /!
0a!
#63
b00000000000000000000000001111000 $
b00000000000000000000000001111100 %
b00000000000000000000000001110100 ;
b00000000000000000000000001110000 <
b00000000000000000000000001110100 @
b00000000000000000000000001101100 H
b111000 ,!
1a!
#64
b00000000000000000000000000011111 /!
0a!
#65
b00000000000000000000000001111100 $
b00000000000000000000000010000000 %
b00000000000000000000000001111000 ;
b00000000000000000000000001110100 <
b00000000000000000000000001111000 @
b00000000000000000000000001110000 H
b111100 ,!
1a!
#66
b00000000000000000000000000100000 /!
0a!
#67
b00000000000000000000000010000000 $
b00000000000000000000000010000100 %
b00000000000000000000000001111100 ;
b00000000000000000000000001111000 <
b00000000000000000000000001111100 @
b00000000000000000000000001110100 H
b000000 ,!
1a!
#68
b00000000000000000000000000100001 /!
0a!
#69
b00000000000000000000000010000100 $
b00000000000000000000000010001000 %
b00000000000000000000000010000000 ;
b00000000000000000000000001111100 <
b00000000000000000000000010000000 @
b00000000000000000000000001111000 H
b000100 ,!
1a!
#70
b00000000000000000000000000100010 /!
0a!
#71
b00000000000000000000000010001000 $
b00000000000000000000000010001100 %
b00000000000000000000000010000100 ;
b00000000000000000000000010000000 <
b00000000000000000000000010000100 @
b00000000000000000000000001111100 H
b001000 ,!
1a!
#72
b00000000000000000000000000100011 /!
0a!
#73
b00000000000000000000000010001100 $
b00000000000000000000000010010000 %
b00000000000000000000000010001000 ;
b00000000000000000000000010000100 <
b00000000000000000000000010001000 @
b00000000000000000000000010000000 H
b001100 ,!
1a!
#74
b00000000000000000000000000100100 /!
0a!
#75
b00000000000000000000000010010000 $
b00000000000000000000000010010100 %
b00000000000000000000000010001100 ;
b00000000000000000000000010001000 <
b00000000000000000000000010001100 @
b00000000000000000000000010000100 H
b010000 ,!
1a!
#76
b00000000000000000000000000100101 /!
0a!
#77
b00000000000000000000000010010100 $
b00000000000000000000000010011000 %
b00000000000000000000000010010000 ;
b00000000000000000000000010001100 <
b00000000000000000000000010010000 @
b00000000000000000000000010001000 H
b010100 ,!
1a!
#78
b00000000000000000000000000100110 /!
0a!
#79
b00000000000000000000000010011000 $
b00000000000000000000000010011100 %
b00000000000000000000000010010100 ;
b00000000000000000000000010010000 <
b00000000000000000000000010010100 @
b00000000000000000000000010001100 H
b011000 ,!
1a!
#80
b00000000000000000000000000100111 /!
0a!
#81
b00000000000000000000000010011100 $
b00000000000000000000000010100000 %
b00000000000000000000000010011000 ;
b00000000000000000000000010010100 <
b00000000000000000000000010011000 @
b00000000000000000000000010010000 H
b011100 ,!
1a!
#82
b00000000000000000000000000101000 /!
0a!
#83
b00000000000000000000000010100000 $
b00000000000000000000000010100100 %
b00000000000000000000000010011100 ;
b00000000000000000000000010011000 <
b00000000000000000000000010011100 @
b00000000000000000000000010010100 H
b100000 ,!
1a!
#84
b00000000000000000000000000101001 /!
0a!
#85
b00000000000000000000000010100100 $
b00000000000000000000000010101000 %
b00000000000000000000000010100000 ;
b00000000000000000000000010011100 <
b00000000000000000000000010100000 @
b00000000000000000000000010011000 H
b100100 ,!
1a!
#86
b00000000000000000000000000101010 /!
0a!
#87
b00000000000000000000000010101000 $
b00000000000000000000000010101100 %
b00000000000000000000000010100100 ;
b00000000000000000000000010100000 <
b00000000000000000000000010100100 @
b00000000000000000000000010011100 H
b101000 ,!
1a!
#88
b00000000000000000000000000101011 /!
0a!
#89
b00000000000000000000000010101100 $
b00000000000000000000000010110000 %
b00000000000000000000000010101000 ;
b00000000000000000000000010100100 <
b00000000000000000000000010101000 @
b00000000000000000000000010100000 H
b101100 ,!
1a!
#90
b00000000000000000000000000101100 /!
0a!
#91
b00000000000000000000000010110000 $
b00000000000000000000000010110100 %
b00000000000000000000000010101100 ;
b00000000000000000000000010101000 <
b00000000000000000000000010101100 @
b00000000000000000000000010100100 H
b110000 ,!
1a!
#92
b00000000000000000000000000101101 /!
0a!
#93
b00000000000000000000000010110100 $
b00000000000000000000000010111000 %
b00000000000000000000000010110000 ;
b00000000000000000000000010101100 <
b00000000000000000000000010110000 @
b00000000000000000000000010101000 H
b110100 ,!
1a!
#94
b00000000000000000000000000101110 /!
0a!
#95
b00000000000000000000000010111000 $
b00000000000000000000000010111100 %
b00000000000000000000000010110100 ;
b00000000000000000000000010110000 <
b00000000000000000000000010110100 @
b00000000000000000000000010101100 H
b111000 ,!
1a!
#96
b00000000000000000000000000101111 /!
0a!
#97
b00000000000000000000000010111100 $
b00000000000000000000000011000000 %
b00000000000000000000000010111000 ;
b00000000000000000000000010110100 <
b00000000000000000000000010111000 @
b00000000000000000000000010110000 H
b111100 ,!
1a!
#98
b00000000000000000000000000110000 /!
0a!
#99
b00000000000000000000000011000000 $
b00000000000000000000000011000100 %
b00000000000000000000000010111100 ;
b00000000000000000000000010111000 <
b00000000000000000000000010111100 @
b00000000000000000000000010110100 H
b000000 ,!
1a!
#100
b00000000000000000000000000110001 /!
0a!
#101
b00000000000000000000000011000100 $
b00000000000000000000000011001000 %
b00000000000000000000000011000000 ;
b00000000000000000000000010111100 <
b00000000000000000000000011000000 @
b00000000000000000000000010111000 H
b000100 ,!
1a!
#102
b00000000000000000000000000110010 /!
0a!
#103
b00000000000000000000000011001000 $
b00000000000000000000000011001100 %
b00000000000000000000000011000100 ;
b00000000000000000000000011000000 <
b00000000000000000000000011000100 @
b00000000000000000000000010111100 H
b001000 ,!
1a!
